#:kivy 2.0.0

# 1. Пишем такое же название класса как в коде в треугольных сокбках 
#    PlayerExample
# 2. Присваиваем переменным которые такие же как в коде id виджетов 
#    и атрибуту orientation ставим значение vertical
# 3. Пишем кнопку загрузки. Атрибуту text присваиваем текст 'Load' и 
#    событию on_press(нажатие на кнопку) присваиваем наш метод загрузки 
#    файла из кода root.load_music()
# 4. Далее прописываем виджет Label который будет отображать путь к файлу. 
#    Присваиваем id:label и начальный текст No song loaded. 
#    Размер шрифта 15sp font_size:'15sp'
# 5. Прописываем Slider. Присваиваем id:slider.Далее событию когда мы 
#    передвигаем ползунок on_touch_move и событию отпускания нажатия 
#    на slider on_touch_up присваиваем метод написанный в 
#    коде music_position и в качестве параметра передаем слайдер(self) 
#    root.music_position(self). Атрибуту size_hint присваиваем значение (1,0.1)
# 6. Пишем макет BoxLayout с тремя виджетами Label. Первому Label 
#    присваиваем id:time, атрибуту text присваиваем текст '00:00' и 
#    размер шрифта 50sp font_size:'50sp'. Второй Label это просто косая черта. 
#    Так же ставим размер шрифта 50sp и size_hint присваиваем значение (0.01,1). 
#    Третий виджет Label это общее время трека. Присваиваем id:all_time, 
#    атрибуту text присваиваем текст '00:00' и размер шрифта 50sp
# 7. Пишем макет BoxLayout c тремя кнопками. Первая кнопка Play которая 
#    будет запускать воспроизведение трека. Присваиваем id:play, атрибуту 
#    text присваиваем текст 'Play', отключаем с помощью атрибута disabled 
#    поставив значение True и событию on_press присваиваем метод из 
#    кода root.play_music(). Вторая кнопка Pause при нажатии на которую 
#    трек будет ставиться на паузу. Присваиваем id:pause, атрибуту text 
#    присваиваем текст 'Pause', отключаем с помощью атрибута disabled п
#    оставив значение True и событию on_press присваиваем метод из 
#    кода root.pause_music(). Третья кнопка Stop при нажатии на которую 
#    трек будет останавливаться и ползунок Slider будет переходит в 
#    начальную позицию слайдера. Присваиваем id:stop, атрибуту text 
#    присваиваем текст 'Stop', отключаем с помощью атрибута disabled 
#    поставив значение True и событию on_press присваиваем метод из 
#    кода root.stop_music()

<AudioPlayer>:
    # vars
    slider: slider
    filename: filename
    play: play
    pause: pause
    stop: stop
    time: time
    all_time: all_time

    # settings
    orientation: 'vertical'

    #design
    Button:
        text: "Load"
        on_press: root.load_music()
    Label:
        id: filename
        text: "No song loaded"
        font_size: '15sp'
    Slider:
        id: slider
        on_touch_move: root.music_position(self)
        on_touch_up: root.music_position(self)
        size_hint: (1, 0.1)

    # group
    BoxLayout:
        orientation: 'horizontal'
        Label:
            id: time
            text: "00:00"
            font_size: '50sp'
        Label:
            text: "/"
            font_size: '50sp'
            size_hint: (0.01, 1)
        Label:
            id: all_time
            text: "00:00"
            font_size: '50sp'

    # group
    BoxLayout:
        orientation: 'horizontal'
        Button:
            id: play
            text: 'Play'
            disabled: 'True'
            on_press: root.play_music()
        Button:
            id: pause
            text: 'Pause'
            disabled: True
            on_press: root.pause_music()
        Button:
            id: stop
            text: 'Stop'
            disabled: 'True'
            on_press: root.stop_music()
# *****************************************************************************************
# Stack Layout
# Модуль: kivy.uix.stacklayout

# Stack Layout - это макет,который упорядочивает виджеты горизонтально и вертикально. 
# Если виджеты не вмещаются в строку, то переносятся на следующую.
# Виджеты можно расположить слево-направо и сверху вниз или справа-налево и снизу-вверх и т.д.

# Атрибуты
# orientation - ориентация макета по умолчанию lr-tb(слево-направо, сверху-вниз). 
    # Так же допустимые значения «tb-lr»(сверху-вниз, слево-направо), 
    # «rl-tb»(справа-налево, сверху-вниз), «tb-rl»(сверху-вниз, справа-налево), 
    # «lr-bt»(слево-направо, снизу-вверх), «bt-lr»(снизу-вверх, слево-направо), 
    # «rl-bt»(справо-налево, снизу-вверх) и «bt-rl»(снизу-вверх, справо-налево).
# padding - внутренние отступы. Принимает список значений в 
    # пискелях "[padding_left, padding_top, padding_right, padding_bottom]". 
    # Так же можно назначить отступ по горизонтали и 
    # вертикали "[padding_horizontal, padding_vertical]" или одинаковое 
    # значение отступов со всех сторон "[padding]".
# spacing - расстояние между виджетами. Принимает список значений в пискелях по 
    # горизонтали и вертикали "[spacing_horizontal, spacing_vertical]".
    # Так же можно задачть только одно значение "[spacing]", которое будет применяться 
    # по горизонтали и вертикали.
# minimum_width - минимальная ширина, необходимая для размещения всех виджетов.
    # Автоматически устанавливается макетом. По умолчанию 0.
# minimum_height - минимальная высота, необходимая для размещения всех виджетов.
    # Автоматически устанавливается макетом. По умолчанию 0.
# minimum_size - минимальный размер, необходимый для размещения всех виджетов.
    # Автоматически устанавливается макетом. 
    # Принимает кортеж "(minimum_width,minimum_height)".

# Методы
# add_widget(widget) - добавляет виджет в макет.
# remove_widget(widget) - удаляет виджет с макета.

# Пример
# Дял примера создадим и добавим с помощью цикла 27 кнопок и расположим их 
# в Stack Layout в ориентации "rl-tb" (right left(справа-налево) - top bottom(сверху-вниз)):
# *****************************************************************************************
# главное окно программы
from kivy.app import App
# стэковый макет
from kivy.uix.stacklayout import StackLayout
# кнопка
from kivy.uix.button import Button
# *****************************************************************************************
# окно программы
class StackLayoutApp(App):
    # ---------------------------------------------------------------------------
    def build(self):
        #Устанавливаем атрибуту orientation значение "rl-tb"
        # sl = StackLayout(orientation='rl-tb')
        #Устанавливаем атрибуту orientation значение "rl-bt"
        sl = StackLayout(orientation='rl-bt')
        for i in range(28):
            btn = Button(text = "Кнопка" + str(i), width = 40 + i * 5 , size_hint = (None, 0.15))
            sl.add_widget(btn)
        return sl
    # ---------------------------------------------------------------------------
# *****************************************************************************************
# запуск программы
if __name__ == '__main__':
    # Как мы видим на изображение кнопки располагаются справа-налево и сверху-вниз.
    # Давайте попробуем поменять ориентацию так, чтобы кнопки располагались снизу-вверх. 
    # Для этого атрибуту orientation установим значение "rl-bt":
    StackLayoutApp().run()
# *****************************************************************************************
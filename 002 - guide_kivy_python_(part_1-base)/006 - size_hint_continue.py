# *****************************************************************************************
# Размеры и позиционирование
# Размеры
# Для задания размера элемента есть два атрибута size и size_hint. 
# По умолчанию используется size_hint, который принимает значения 
# ширины и длины от 0(0% макета) до 1(100% макета). Если значение 
# установлено в 1, то элемент растягивается на весь макет.
# Если 0 (так же можно установить значения "None"), то элемент 
# не привязывается к размеру макета и тем самым можно установить 
# фиксированное значение элемента с помошью атрибута size в пикселях. 
# Например:
# *****************************************************************************************
# главное окно программы
from kivy.app import App
# коробочный макет
from kivy.uix.boxlayout import BoxLayout
# кнопка
from kivy.uix.button import Button
# *****************************************************************************************
# окно программы
class TestApp(App):
    def build(self):
        bl = BoxLayout()
        # Давайте назначим кнопке 30% размера от макета и посмотрим что получится:
        btn = Button(text='ok', size_hint=(0.3, 0.3))
        # Попробуем добавить еще одну кнопку и зададим ей size_hint значение "0.7" по ширине и длине.
        btn2 = Button(text='ok2', size_hint=(0.7, 0.7))
        bl.add_widget(btn)
        bl.add_widget(btn2)
        return bl
# *****************************************************************************************
# запуск программы
# Первая кнопка заняла 30% размера макета по ширине, а вторая кнопка 70%
# Про макеты более подробно будет сказано в разделе Layouts(Макеты). 
# Главное помнить, что size принимает фиксированное значение ширины и длины в пикселях 
# и только в том случае если значение size_hint установлено в "None" или "0", 
# а size_hint принимает значение от 0 (0% размера макета) до 1 (100% размера макета).
if __name__ == '__main__':
    TestApp().run()
# *****************************************************************************************
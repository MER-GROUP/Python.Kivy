# *****************************************************************************************
# импорт основного окна App
from kivy.app import App
# импорт модуля Коробочный макет
# в него будем пихать кнопки и др. GUI элементы
from kivy.uix.boxlayout import BoxLayout
# импорт модуля Кнопка
from kivy.uix.button import Button
# импорт модуля Ввод Текста
from kivy.uix.textinput import TextInput
# импортируем модуль Свойство Объекта 
# для работы с KV файлами
# from kivy.properties import ObjectProperty
# импорт модуля os - работа с файлами и папками
# listdir - показывает файлы в конкретной папке
from os import listdir
# импорт модуля Строитель - загружает .kv файлы в проект
from kivy.lang import Builder
# записываем директорию в переменную kv_path
kv_path = './013/'
# загрузить все файлы .kv по отдельности
for kv_file in listdir(kv_path):
    Builder.load_file(kv_path + kv_file)
# *****************************************************************************************
# создаем основное окно программы, наследуя App - основные свойства окна
class Calc(App):
    # создаем стандартный конструктор Kivy: build(self)
    # где переопределяем некоторые стандартные свойства окна
    def build(self):
        # заголовок окна
        self.title = 'Калькулятор'
        # встраиваем в основное окно объект Коробочный макет
        # дизайн и функционал основного окна
        return Maket()
# *****************************************************************************************
# создаем основной коробочный макет
# описание свойств класса - ./013/Maket.kv
class Maket(BoxLayout):
    # определяем переменную display со свойством ObjectProperty()
    # display = ObjectProperty()
    # массив операторов
    operators = ['/', '*', '+', '-']
    # двумерный массив с наименованиями кнопок
    buttons = [['7', '8', '9', '/'],
                    ['4', '5', '6', '*'],
                    ['1', '2', '3', '-'],
                    ['.', '0', 'C', '+']]
    # был ли нажат последней кнопкой оператор (False/True)
    last_was_operator = None
    # какой была последняя кнопка
    last_button = None
# *****************************************************************************************
# создаем поле для ввода текста
# описание свойств класса - ./013/Solution.kv
class Solution(TextInput):
    pass
# *****************************************************************************************
# создаем поле для ввода текста
# описание свойств класса - ./013/Buttons.kv
class Buttons(Button):
    pass
# *****************************************************************************************
# если программа не модуль, то выполнить
if __name__ == '__main__':
    # запускаем приложение
    Calc().run()
# *****************************************************************************************